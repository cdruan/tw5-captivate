title: $:/themes/cdr/captivate/css/base
tags: $:/tags/Stylesheet
list-after: $:/themes/tiddlywiki/vanilla/base

\rules only filteredtranscludeinline transcludeinline macrodef macrocallinline macrocallblock html

\define dur() 300ms

\define outline-color() {{{ [colour[selection-background]deviate[]] }}}

/* Captivate Theme CSS */

h1,h2,h3,h4,h5,h6 { font-weight: 400; }

h1 { font-size: 1.5em; }
h2 { font-size: 1.32em; }

.tc-tiddler-body h1, .tc-tiddler-body h2,
.tc-tiddler-body h3, .tc-tiddler-body h4 {
	margin-top: 1rem;
	margin-bottom: 1rem;
}

.tc-tiddler-body h5, .tc-tiddler-body h6 {
	margin-bottom: -0.5rem;
}

.tc-tiddler-body li + li {
  margin-top: 0.25em;
}

.tc-site-title,
.tc-titlebar {
	font-size: 26px;
	line-height: 1.1;
}

.tc-title {
	letter-spacing: -0.5px;
	line-height: 1.1
}

.tc-tiddler-title-icon:empty,
.tc-subtitle a.tc-tiddlylink-missing[href="#"] {
	display: none;
}

/* HTML TWEAKS */

pre {
	background-color: <<colour tiddler-editor-background>>;
	border: 1px solid <<colour tiddler-editor-border>>;
}

input, textarea {
	transition: border .14s ease-in-out;
	border: 1px solid <<colour tiddler-editor-border>>;
	padding: .5em;
	border-radius: 5px;
}

select {
	border: 1px solid <<colour tiddler-editor-border>>;
	padding: 1px 5px;
	border-radius: 5px;
}

:focus-visible {
	outline: 1px solid <<outline-color>>;
	outline-offset: 1px;
}

input:focus-visible, textarea:focus-visible,
.tc-tiddler-frame input.tc-edit-texteditor:focus-visible,
.tc-tiddler-frame textarea.tc-edit-texteditor:focus-visible,
.tc-tiddler-frame iframe.tc-edit-texteditor:focus-visible {
	box-shadow: 0 0 3px 1px  <<outline-color>>;
	border-color: <<outline-color>>;
	outline: none;
}

input[type="radio"] {
	vertical-align: sub;
}

input[type="radio"] {
	margin-right: 3px;
}

input, input[type="password"] {
	background: <<colour background>>;
	border: 1px solid <<colour tiddler-editor-border>>;
}

/*
input[type="color"] {
	background: <<colour dropdown-background>>;
	border: 1px solid <<colour tiddler-editor-border>>;
	padding: 5px 10px;
	height: 25px;
}
*/

input[type="range"] {
	padding: 0;
	box-shadow: none;
}

textarea, input[type="text"], input[type="search"], input[type=""], input:not([type]) {
	background-color: <<colour tiddler-editor-background>>;
}

hr {
	border: none;
	border-top: 1px solid <<colour tab-divider>>;
}

html button {
	font-weight: 600;
	padding: 3px 9px;
	cursor: pointer;
	transition: box-shadow ease-in .1s;
}

details > summary {
	cursor: pointer;
}

.tc-sidebar-tab-open .tc-btn-invisible.tc-btn-mini svg {
	fill: <<colour sidebar-muted-foreground>>;
}

.tc-sidebar-tab-open .tc-btn-invisible.tc-btn-mini:hover svg {
	fill: <<colour sidebar-muted-foreground-hover>>;
}

/* provides fallback when button-background color is blank */
html button {
	background: #f1f0ee;
	background: <<colour button-background>>;
	color: #121212;
	color: <<colour button-foreground>>;
	fill: #121212;
	fill: <<colour button-foreground>>;
	border: 1px solid #cdc7c2;
	border-color: <<colour button-border>>;
	border-radius: 5px;
}

button:disabled:not(.tc-btn-invisible),
button:disabled:not(.tc-btn-invisible):hover {
	cursor: default;
	opacity: 53%;
}

button:not(:disabled):not(.tc-btn-invisible):hover {
	background-color: <<colour button-background-hover>>;
}

div:not(.tc-tab-buttons) button:not(.tc-btn-invisible):focus-visible {
	outline: none;
	box-shadow: 0 0 2px 1px <<outline-color>>;;
}

button.cv-secondary-btn {
	background: <<colour secondary-button-background>>;
	color: <<colour secondary-button-foreground>>;
	fill: <<colour secondary-button-foreground>>;
	border: 1px solid <<colour secondary-button-border>>;;
}

button.cv-secondary-btn:not(:disabled):hover {
	background-color: <<colour secondary-button-background-hover>>;
}

/* POPUPS */

.tc-drop-down,
.tc-block-dropdown {
	margin: 0px;
	padding: 5px 8px 5px 0px;
	min-width: auto;
	/* max-height: 30vh; */
	overflow-y: auto;
	font-weight: normal;
	border-radius: 2px;
	box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
}

.tc-block-dropdown .tc-tab-buttons a {
  display: revert;
  padding: 0px;
}

.tc-block-dropdown a.tc-tiddlylink-external {
  display: unset;
}

.tc-drop-down .tc-menu-list-item > a.tc-tiddlylink {
	white-space: normal;
}

.tc-drop-down a, .tc-drop-down button {
	text-align: left !important;
}

.tc-drop-down a:hover,
.tc-drop-down a.tc-tiddlylink:hover,
.tc-drop-down button:hover,
.tc-drop-down .tc-file-input-wrapper:hover button,
.tc-drop-down button.tc-btn-invisible:hover svg,
.tc-chosen,
.tc-chooser-item:hover,
a.tc-tiddlylink.tc-plugin-info:hover {
	color: <<colour selection-foreground>>;
	fill: <<colour selection-foreground>>;
	background-color: {{{ [colour[selection-background]alpha[0.45]] }}};
	opacity: 1;
}

.tc-chosen {
	background-color: {{{ [colour[selection-background]alpha[0.65]] }}};
}

.tc-drop-down .tc-btn-invisible {
	margin: 0 !important;
	text-align: left !important;
	font-weight: normal;
}

.tc-drop-down .tc-menu-list-item > a.tc-tiddlylink:hover {
	background: <<colour selection-background>>;
	color: <<colour selection-foreground>>;
}

.tc-block-dropdown a.tc-tiddlylink:hover {
	background-color: {{{ [colour[tiddler-link-foreground]alpha[0.1]] }}};
	color: <<colour tiddler-link-foreground>>;
}

.tc-chosen, .tc-chooser-item:hover {
}

.tc-chooser-item a.tc-tiddlylink:hover {
	background-color: revert;
}

.tc-drafts-list a {
	font-size: 1.25em;
	font-weight: normal;
	border: 1px solid <<colour background>>;
	background: <<colour dirty-indicator>>;
	color: {{{ [colour[dirty-indicator]autocontrast[]] }}};
	fill: {{{ [colour[dirty-indicator]autocontrast[]] }}};
}
/* TABS */

div.tc-tab-set {
	box-shadow: none;
}

.tc-tab-set .tc-tab-content.tc-vertical {
	z-index: 100;
	border-left: 1px solid <<colour tab-divider>>;
}

.tc-tab-set .tc-tab-buttons button {
	font-weight: 400;
	vertical-align: bottom;
}

.tc-tab-set .tc-tab-buttons button:not(.tc-tab-selected):hover {
	background: rgba(150,150,150,0.15);
}

.tc-tab-set .tc-tab-buttons button.tc-tab-selected:hover {
	background: <<colour tab-background-selected>>;
}

.tc-tab-set .tc-tab-buttons:not(.tc-vertical) button.tc-tab-selected {
	font-weight: 600;
}

/*
.tc-tab-set > .tc-tab-buttons:not(.tc-vertical) button {
	background: transparent;
}
*/

.tc-tab-set > .tc-tab-buttons:not(.tc-vertical) button.tc-tab-selected {
	opacity: 1;
}

.tc-tab-set > .tc-tab-buttons.tc-vertical > button {
	text-align: left;
}

.tc-tab-set > .tc-tab-buttons.tc-vertical > button.tc-tab-selected {
	background-color: <<colour tab-background-selected>>;
	color: <<colour tab-foreground-selected>>;
	font-weight: 600;
}

/* TOPBAR */

.cv-topbar-wrapper .cv-topbar-title,
.cv-sidebar .cv-topbar-title {
	font-size: 20px;
	font-weight: 600;
	line-height: 1;
}

.cv-topbar-main > .tc-page-controls {
	font-size: 1em;
}

.cv-topbar-wrapper .tc-btn-invisible,
button.cv-topbar-btn {
	font-size: 16px;
	line-height: 1;
}

/* BOTTOMBAR */

.cv-bottombar-wrapper {
	background: <<colour secondary-button-background>>;
}

.cv-bottombar-wrapper .tc-page-controls svg {
	fill: <<colour secondary-button-foreground>>;
}

.cv-bottombar-wrapper .tc-page-controls button.tc-selected svg {
	fill: #303030;
}

.cv-bottombar-wrapper .tc-page-controls svg .tc-image-cloud-idle {
	fill: <<colour secondary-button-background>>;
}

/* SEARCHBAR */

.cv-search-bar input {
	border-radius: 3px;
	line-height: 1.45;
}

.tc-search-drop-down a {
	white-space: nowrap;
	text-overflow: ellipsis;
	font-size: .92em;
}

/*
.tc-search-drop-down a:hover {
	white-space: normal;
}
*/

/* SIDEBAR */

div.cv-sidebar {
	font-size: .95em;
	background-color: <<colour sidebar-background>>;
	color: <<colour sidebar-foreground>>;
	fill: <<colour sidebar-foreground>>;
}

.cv-sidebar .tc-tab-set.tc-sidebar-tabs-main > .tc-tab-buttons > button {
	text-transform: uppercase;
}

.cv-sidebar .tc-tab-set.tc-sidebar-tabs-main > .tc-tab-buttons > .tc-tab-selected,
.cv-sidebar .tc-tab-set.tc-sidebar-tabs-main .tc-tab-buttons.tc-vertical > .tc-tab-selected {
	color: <<colour sidebar-tab-foreground-selected>>;
	font-weight: 600;
}

.tc-tab-buttons.tc-sidebar-tabs-main > button {
	flex-grow: 1;
}

.tc-sidebar-tabs button.tc-tiddlylink,
.tc-sidebar-tabs a.tc-tiddlylink {
	color: <<colour sidebar-tiddler-link-foreground>>;
}

.tc-sidebar-tabs-main a.tc-tiddlylink {
	color: <<colour sidebar-tiddler-link-foreground>>;
}

.tc-sidebar-tabs-main a.tc-tiddlylink:hover {
	color: <<colour sidebar-tiddler-link-foreground-hover>>;
	background-color: <<colour selection-background>>;
}

.cv-sidebar .tc-tab-content.tc-sidebar-tabs-more > div > .tc-menu-list-item,
.cv-sidebar .tc-tab-content.tc-sidebar-tabs-more .tc-menu-list-item > .tc-menu-list-subitem {
	white-space: nowrap;
	text-overflow: ellipsis;
	line-height: 1.2;
}

.tc-sidebar-tabs-main .tc-menu-list-subitem {
	overflow-x: hidden;
	text-overflow: ellipsis;
}

.cv-sidebar .tc-tab-content.tc-sidebar-tabs-more > div > .tc-menu-list-item:hover,
.cv-sidebar .tc-tab-content.tc-sidebar-tabs-more .tc-menu-list-item > .tc-menu-list-subitem:hover {
	white-space: normal;
	background-color: <<colour selection-background>>;
}

.cv-sidebar .tc-sidebar-tabs-more .tc-tab-set .tc-menu-list-item {
	white-space: normal;
	line-height: 1.3;
}

.cv-sidebar .tc-tab-content div[class^="tc-btn-"] button,
.tc-sidebar-lists .tc-tab-content div[class^="tc-btn-"] button {
	background-color: <<colour secondary-button-background>>;
	color: <<colour secondary-button-foreground>>;
	fill: <<colour secondary-button-foreground>>;
}

.cv-sidebar .tc-tab-content div[class^="tc-btn-"] button:hover {
	background-color: <<colour secondary-button-background-hover>>;
}

/* ACCENT TOPBAR: YES */

<$reveal type="nomatch" state="$:/themes/cdr/captivate/settings/accent-topbar" text="no" default="yes">
	.cv-topbar-wrapper {
		background: <<colour primary>>;
		/*
		box-shadow: 0px 0px 3px rgba(0, 0, 0, 0.3);
		*/
	}

	.cv-topbar-wrapper .cv-topbar-title,
	.cv-topbar-wrapper .cv-topbar-btn,
	.cv-topbar-wrapper .cv-search-bar > .tc-btn-invisible,
	.cv-topbar-wrapper .tc-page-controls > .tc-btn-invisible svg {
		color: {{{ [colour[primary]autocontrast[]] }}};
		fill: {{{ [colour[primary]autocontrast[]] }}};
	}

	.cv-search-bar input:not(:focus-visible) {
		background-color: {{{ [[#fff]alpha[0.2]over<colour primary>] }}};
		color: {{{ [[#fff]alpha[0.2]over<colour primary>autocontrast[]] }}};
	}

	.cv-search-bar input:not(:focus-visible)::placeholder {
		color: {{{ [colour[primary]deviate[]autocontrast[]] }}};
		opacity: 0.85;
	}

	@media (min-width: {{$:/themes/tiddlywiki/vanilla/metrics/sidebarbreakpoint}}) {
		div.cv-sidebar {
			border-right: 1px solid <<colour sidebar-tab-divider>>;
		}
	}

	.tc-tiddler-frame {
		box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 3px 1px -2px rgba(0,0,0,0.12), 0 1px 5px 0 rgba(0,0,0,0.20);
	}
</$reveal>

/* ACCENT TOPBAR: NO */

<$reveal type="match" state="$:/themes/cdr/captivate/settings/accent-topbar" text="no">
	.cv-topbar-wrapper,
	.cv-topbar-wrapper button:hover {
		background: <<colour page-background>>;
	}

	.cv-topbar-wrapper .cv-topbar-title,
	.cv-topbar-wrapper .cv-topbar-btn,
	.cv-topbar-wrapper .cv-search-bar > .tc-btn-invisible,
	.cv-topbar-wrapper .tc-page-controls > button svg {
		color: <<colour foreground>>;
		fill: <<colour foreground>>;
	}

	.cv-topbar-wrapper button:hover .tc-image-cloud-idle,
	.cv-topbar-wrapper button .tc-image-cloud-idle {
		fill: <<colour page-background>>;
	}

	<$vars bgcolor={{{ [colour[page-background]deviate[]] }}} fgcolor={{{ [colour[page-background]deviate[]autocontrast[]] }}} >
		.cv-search-bar input:not(:focus-visible) {
			background-color: <<bgcolor>>;
			color: <<fgcolor>>;
		}
		.cv-search-bar input:not(:focus-visible)::placeholder {
			color: <<fgcolor>>;
			opacity: 0.7;
		}
	</$vars>

	.tc-tiddler-frame {
		box-shadow: 2px 1px 6px 2px rgba(0,0,0,0.10);
	}
</$reveal>

/* VANILLA TWEAKS */

button.tc-untagged-label.tc-tag-label {
	color: <$macrocall $name="color-autocontrast" color={{{ [colour[untagged-background]] }}} />;
}

.tc-tiddler-body button {
	font-size: 0.9em;
}

<$reveal type="match" state="$:/themes/tiddlywiki/vanilla/options/codewrapping" text="pre">
.tc-tiddler-body > pre {
	overflow-x: scroll;
	overflow-wrap: normal;
}
</$reveal>


.tc-modal {
	border-radius: 6px;
	box-shadow: 0 3px 7px rgba(0,0,0,0.3);
}

.tc-modal-footer {
	border-radius: 0 0 6px 6px;
}

/* SCROLLBARS */

div::-webkit-scrollbar {
	height: 8px;
	width: 8px;
	background: rgba(256, 256, 256, 0.2);
}

div::-webkit-scrollbar-thumb {
	background: <<color primary>>;
	border-radius: 3px;
}

/* LINKS */

/* internal */
a.tc-tiddlylink,
a.tc-tiddlylink:visited {
	text-decoration:none;
}

.tc-sidebar-lists a.tc-tiddlylink:hover {
	text-decoration:none;
}

/* external */
a.tc-tiddlylink-external,
a.tc-tiddlylink-external:visited {
	text-decoration: none;
}

a.tc-tiddlylink:hover,
a.tc-tiddlylink-external:hover {
  text-decoration-line: underline;
  text-underline-offset: 2px;
}

@media screen {
  a.tc-tiddlylink-external::after {
    content: "";
    height: 10px;
    width: 10px;
    display: inline-block;
	-webkit-mask: url("data:image/svg+xml,%3Csvg version='1.1' viewBox='0 0 12 12' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='m7.5 0.5h4v4m-8-4h-3v11h11v-3m0-8-6.5 6.5' fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.25'/%3E%3C/svg%3E");
	mask: url("data:image/svg+xml,%3Csvg version='1.1' viewBox='0 0 12 12' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='m7.5 0.5h4v4m-8-4h-3v11h11v-3m0-8-6.5 6.5' fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.25'/%3E%3C/svg%3E");
	-webkit-mask-size: cover;
    mask-size: cover;
    background-color: currentcolor;
    margin: 0 2px 0 3px;
    -webkit-print-color-adjust: exact;
    color-adjust: exact;
    print-color-adjust: exact;
  }
}

a.tc-tiddlylink.tc-plugin-info:hover > .tc-plugin-info-chunk > svg {
	fill: <<colour selection-foreground>>;
}

.tc-tree li span {
	color: <<colour very-muted-foreground>>;
}

.tc-tiddler-body code {
	font-size: 0.95em;
}

.tc-tiddler-info {

}

/* FAB BUTTONS */
.tc-page-controls button.cv-fab-item {
	font-size: 16px;
	border-radius: 50%;
	border: none;

	background-color: <<colour fab-background>>;
	box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 3px 1px -2px rgba(0,0,0,0.12), 0 1px 5px 0 rgba(0,0,0,0.20);
	<<transition "background $(dur)$, fill $(dur)$">>
}

button.cv-fab-item svg {
	fill: <<colour fab-foreground>>;
}

.cv-topbar-wrapper .tc-image-cloud-idle {
	fill: <<colour fab-background>>;
}

button.cv-fab-item .tc-image-cloud-idle {
	fill: {{{ [colour[fab-background]] }}};
}

.tc-page-controls button.cv-fab-item:hover {
	background: <<colour fab-background-hover>>;
}

.tc-page-controls button.cv-fab-item:hover svg {
	fill: {{{ [colour[fab-background-hover]autocontrast[]] }}};
	color: {{{ [colour[fab-background-hover]autocontrast[]] }}};
}

button.cv-fab-item:hover .tc-image-cloud-idle {
	fill: <<colour fab-background-hover>>;
}

/* PORTRAIT */

@media (max-width: {{$:/themes/tiddlywiki/vanilla/metrics/sidebarbreakpoint}}) {
	.cv-sidebar .tc-sidebar-tabs {
		box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.5);
	}

	.tc-block-dropdown.cv-search-dropdown {
		-webkit-transform: unset;
		-moz-transform: unset;
		-ms-transform: unset;
		-o-transform: unset;
		transform: unset;
	}

	<$reveal type="nomatch" state="$:/view" text="zoomin">
		.tc-drop-down,
		.tc-block-dropdown {
			-webkit-transform: translateY(-50%);
			-moz-transform: translateY(-50%);
			-ms-transform: translateY(-50%);
			-o-transform: translateY(-50%);
			transform: translateY(-50%);
			text-align: left;
		}
	</$reveal>

	.tc-block-dropdown.cv-search-dropdown {
		box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12);
	}

	.tc-tiddler-frame {
		box-shadow: 0px 2px 3px rgba(0, 0, 0, 0.5);
	}
}

@supports (-webkit-touch-callout: none) {
	/* CSS specific to iOS devices */
	input, textarea {
		font-size: 16px;   /* prevents automatic zoom-in with small fonts */
	}
}

<$reveal type="match" state="$:/layout" text="$:/themes/cdr/captivate/ui/PageLayout">
{{$:/themes/cdr/captivate/css/base-layout}}
</$reveal>

<$reveal type="match" stateTitle={{$:/palette}} stateField="color-scheme" text="dark">
.tc-tiddler-body p {
	word-spacing: 0.1em;
}

mark {
	background-color: #eeee00;
}
</$reveal>

@media print {
	:root {
		color-scheme: light;
	}
	.tc-tiddler-body a[href^=http]:after {
		content:" <" attr(href) "> ";
		font-size: 0.85em;
	}

	.tc-plugin-info-dropdown-body {
		background-color: unset;
	}

	html button, .tc-tag-label {
		border: 1px buttontext solid;
		background-color: unset;
		color: buttontext;
		fill: buttontext;
	}

	.tc-tab-buttons button.tc-tab-selected {
		background-color: transparent;
		color: buttontext;
		fill: buttontext;
	}
}

